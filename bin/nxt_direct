#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# Copyright (c) 2018 Lars Bergmann
#
# GNU GENERAL PUBLIC LICENSE
#    Version 3, 29 June 2007
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

import argparse
from pf_nxt.nxt_robo import ScoutRobo

if __name__ == '__main__':

    parser = argparse.ArgumentParser()
    parser.add_argument(
        '-b',
        '--baddr',
        help='Bluetooth address of the NXT robot',
        type=str,
        default='00:16:53:0D:14:AE'
    )
    parser.add_argument(
        '-s',
        '--secretpin',
        help='Pin to access NXT via bluetooth',
        type=str,
        default='1234'
    )

    parser.add_argument(
        '-g',
        '--gamepad',
        help='Gamepad robot control',
        action='store_true',
        default=False
    )

    parser.add_argument(
        '-a',
        '--autopilot',
        help='Autopilot robot control',
        action='store_true',
        default=False
    )

    parser.add_argument(
        '-m',
        '--method',
        help='Method to access NXT',
        type=str,
        default='bluetooth'
    )

    args = parser.parse_args()

    # Change baddr and pin for your robot
    robo = ScoutRobo(
        baddr=args.baddr,
        pin=args.secretpin,
        direct=True,
        method=args.method
    )
    print('Robo initialized')
    if args.gamepad:
        robo.pad_controller.run_gamepad()
    elif args.autopilot:
        robo.autopilot.run()
    else:
        parser.print_help()
